{"version":3,"sources":["Components/Search.js","Components/Images.js","Components/LoadMore.js","Components/ImageInfo.js","App.js","reportWebVitals.js","index.js"],"names":["Search","inp","fetchImages","images","query","className","type","placeholder","onChange","onClick","color","Images","counter","map","image","index","src","urls","regular","alt","alt_description","id","LoadMore","increaseCounter","length","ImageInfo","showInfo","copy","toUpperCase","App","useState","setQuery","setCopy","setShowInfo","setCounter","setImages","useEffect","fetch","then","res","json","data","results","e","target","value","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAWeA,EATA,SAAC,GAAoC,IAAnCC,EAAkC,EAAlCA,IAAIC,EAA8B,EAA9BA,YAA8B,EAAlBC,OAAkB,EAAXC,MACtC,OACE,gCACE,uBAAOC,UAAU,cAAcC,KAAK,OAAOC,YAAY,oBAAoBC,SAAUP,IACrF,wBAAQK,KAAK,SAASD,UAAU,MAAMI,QAASP,EAA/C,SAA4D,cAAC,IAAD,CAAUQ,MAAM,gBCWnEC,EAjBA,SAAC,GAAsB,IAArBR,EAAoB,EAApBA,OAAOS,EAAa,EAAbA,QACtB,OACE,qBAAKP,UAAU,aAAf,SAEEF,EAAOU,KAAI,SAACC,EAAMC,GAChB,OAAGA,EAAMH,EAEP,qBAAoBI,IAAKF,EAAMG,KAAKC,QAASC,IAAKL,EAAMM,gBAAiBf,UAAU,UAAzES,EAAMO,IAGV,WCFDC,EARE,SAAC,GAAsC,IAArCV,EAAoC,EAApCA,QAAQW,EAA4B,EAA5BA,gBAAgBpB,EAAY,EAAZA,OACzC,OACE,8BACGS,EAAQ,GAAGA,EAAQT,EAAOqB,OAAO,wBAAQnB,UAAU,WAAWI,QAASc,EAAtC,uBAA0E,2BCWnGE,EAdG,SAAC,GAA4B,IAA3BC,EAA0B,EAA1BA,SAASC,EAAiB,EAAjBA,KAAKxB,EAAY,EAAZA,OAChC,OACE,+BAEe,IAAXuB,EACA,gCACA,oBAAIrB,UAAU,cAAd,SAA6BsB,EAAKC,gBAClC,oBAAGvB,UAAU,eAAb,UAA6BF,EAAOqB,OAApC,gCACC,2BC+CMK,MAhDf,WACE,MAAyBC,mBAAS,IAAlC,mBAAO1B,EAAP,KAAa2B,EAAb,KACA,EAAuBD,mBAAS,UAAhC,mBAAOH,EAAP,KAAYK,EAAZ,KAEA,EAA8BF,mBAAS,SAAvC,mBAAOJ,EAAP,KAAgBO,EAAhB,KACA,EAA4BH,mBAAS,GAArC,mBAAOlB,EAAP,KAAesB,EAAf,KACA,EAA0BJ,mBAAS,IAAnC,mBAAO3B,EAAP,KAAcgC,EAAd,KAgCA,OAdAC,qBAAU,WACRL,EAAS,UACTM,MAAM,0HACLC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJN,EAAUM,EAAKC,SACfR,EAAW,GACXD,GAAY,QAEd,CA9BM,IAoCN,sBAAK5B,UAAU,MAAf,UACE,cAAC,EAAD,CAAQJ,IAhCA,SAAC0C,GACXZ,EAASY,EAAEC,OAAOC,QA+BE3C,YA3BJ,WAChBmC,MAAM,uGAAD,OAAwGjC,EAAxG,iBACJkC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAG,GACJN,EAAUM,EAAKC,SACfR,EAAW,GACXD,GAAY,MAEdD,EAAQ5B,IAmBsCD,OAAQA,EAAQC,MAAOA,IACnE,cAAC,EAAD,CAAWsB,SAAUA,EAAUC,KAAMA,EAAMxB,OAAQA,IACnD,cAAC,EAAD,CAAQA,OAAQA,EAAQS,QAASA,IACjC,cAAC,EAAD,CAAUA,QAASA,EAASW,gBARV,WACpBW,EAAWtB,EAAQ,IAO6CT,OAAQA,QCtC7D2C,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBV,MAAK,YAAkD,IAA/CW,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.03eaaac8.chunk.js","sourcesContent":["import { FaSearch } from 'react-icons/fa';\r\n\r\nconst Search = ({inp,fetchImages,images,query}) => {\r\n  return (\r\n    <div>\r\n      <input className='input-style' type='text' placeholder='Search for photos' onChange={inp}/>\r\n      <button type='submit' className='btn' onClick={fetchImages}><FaSearch color='white' /></button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Search\r\n","const Images = ({images,counter}) => {\r\n  return (\r\n    <div className='collection'>\r\n    {\r\n      images.map((image,index)=>{\r\n        if(index<counter){  \r\n          return(\r\n          <img key={image.id} src={image.urls.regular} alt={image.alt_description} className='single'/>);\r\n        }\r\n        else\r\n         return null;\r\n      })\r\n    }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Images\r\n","const LoadMore = ({counter,increaseCounter,images}) => {\r\n  return (\r\n    <div>\r\n      {counter>0&&counter<images.length?<button className='btn-load' onClick={increaseCounter}>Load More</button>:<div />}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LoadMore\r\n","const ImageInfo = ({showInfo,copy,images}) => {\r\n  return (\r\n    <div>\r\n      {\r\n        showInfo===true ?\r\n        <div>\r\n        <h1 className='info-header'>{copy.toUpperCase()}</h1>\r\n        <p className='info-details'>{images.length} images have been found</p></div>\r\n        :<div />\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageInfo\r\n","import './App.css';\nimport Search from './Components/Search';\nimport Images from './Components/Images';\nimport LoadMore from './Components/LoadMore';\nimport ImageInfo from './Components/ImageInfo';\nimport React, { useState, useEffect } from 'react';\n\nfunction App() {\n  const [query,setQuery] = useState('');\n  const [copy,setCopy] = useState('random');\n  const v=1;//random variable so that useEffect only runs one time.\n  const [showInfo,setShowInfo]= useState('false');\n  const [counter,setCounter]= useState(0);\n  const [images,setImages] =useState([]);\n  //to set query\n  const inp = (e)=>{\n    setQuery(e.target.value);\n    //setShowInfo(false);\n  }\n  //to set images and counter and show info.\n  const fetchImages=()=>{\n    fetch(`https://api.unsplash.com/search/photos/?client_id=ZrWKw5ISTwv1nN_9iQFwi3NMWSpTPwmFNx6_r86Aex4&query=${query}&per_page=30`)\n    .then(res=>res.json())\n    .then(data=>{\n      setImages(data.results);\n      setCounter(8);\n      setShowInfo(true);\n    })\n    setCopy(query);\n  }\n  //to initially set random photos\n  useEffect(() => {\n    setQuery('random')\n    fetch(`https://api.unsplash.com/search/photos/?client_id=ZrWKw5ISTwv1nN_9iQFwi3NMWSpTPwmFNx6_r86Aex4&query=random&per_page=30`)\n    .then(res=>res.json())\n    .then(data=>{\n      setImages(data.results);\n      setCounter(8);\n      setShowInfo(true);\n    })\n  },[v]);\n  //to increase counter on clicking load more.\n  const increaseCounter=()=>{\n    setCounter(counter+8);\n  }\n  return (\n    <div className=\"App\">\n      <Search inp={inp} fetchImages={fetchImages} images={images} query={query}/>\n      <ImageInfo showInfo={showInfo} copy={copy} images={images}/>\n      <Images images={images} counter={counter} />\n      <LoadMore counter={counter} increaseCounter={increaseCounter} images={images}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}